name: Supabase Preview Branch Management

on:
  pull_request:
    types: [opened, reopened, closed, synchronize]

env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}

jobs:
  create-preview-branch:
    name: Create Supabase Preview Branch
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'reopened'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Supabase CLI
      run: |
        npm install -g supabase
        
    - name: Create preview branch
      id: create-branch
      run: |
        echo "üåø Creating Supabase preview branch for PR #${{ github.event.number }}..."
        
        # Create branch name
        BRANCH_NAME="pr-${{ github.event.number }}"
        
        # Create the branch
        npx supabase branches create $BRANCH_NAME \
          --project-ref $SUPABASE_PROJECT_ID \
          --experimental
        
        # Get branch details
        BRANCH_DETAILS=$(npx supabase branches show $BRANCH_NAME \
          --project-ref $SUPABASE_PROJECT_ID \
          --experimental --json)
        
        # Extract URL and anon key
        BRANCH_URL=$(echo $BRANCH_DETAILS | jq -r '.url')
        BRANCH_ANON_KEY=$(echo $BRANCH_DETAILS | jq -r '.anon_key')
        
        # Output for next steps
        echo "branch_url=$BRANCH_URL" >> $GITHUB_OUTPUT
        echo "branch_anon_key=$BRANCH_ANON_KEY" >> $GITHUB_OUTPUT
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        
    - name: Update PR description with branch info
      uses: actions/github-script@v7
      with:
        script: |
          const branchUrl = '${{ steps.create-branch.outputs.branch_url }}';
          const branchName = '${{ steps.create-branch.outputs.branch_name }}';
          
          // Get current PR body
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          // Add branch info to PR description
          const branchInfo = `
          
          ---
          ### üåø Supabase Preview Branch
          - **Branch Name**: \`${branchName}\`
          - **Branch URL**: \`${branchUrl}\`
          - **Status**: ‚úÖ Active
          
          This preview branch will be automatically deleted when the PR is closed.
          `;
          
          // Update PR description
          await github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            body: pr.body + branchInfo
          });
          
    - name: Set branch environment variables in Vercel
      run: |
        # This would require Vercel API integration
        # For now, document the values for manual setup
        echo "üìù Add these environment variables to your Vercel preview deployment:"
        echo "VITE_SUPABASE_URL=${{ steps.create-branch.outputs.branch_url }}"
        echo "VITE_SUPABASE_ANON_KEY=${{ steps.create-branch.outputs.branch_anon_key }}"
        
  sync-preview-branch:
    name: Sync Preview Branch Schema
    runs-on: ubuntu-latest
    if: github.event.action == 'synchronize'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Supabase CLI
      run: npm install -g supabase
      
    - name: Sync branch with latest migrations
      run: |
        echo "üîÑ Syncing preview branch with latest schema..."
        
        BRANCH_NAME="pr-${{ github.event.number }}"
        
        # Push migrations to branch
        npx supabase db push \
          --branch $BRANCH_NAME \
          --project-ref $SUPABASE_PROJECT_ID \
          --experimental
          
        echo "‚úÖ Preview branch synced with latest migrations"
        
  cleanup-preview-branch:
    name: Cleanup Supabase Preview Branch
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    
    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Supabase CLI
      run: npm install -g supabase
      
    - name: Delete preview branch
      run: |
        echo "üßπ Cleaning up Supabase preview branch for PR #${{ github.event.number }}..."
        
        BRANCH_NAME="pr-${{ github.event.number }}"
        
        # Delete the branch
        npx supabase branches delete $BRANCH_NAME \
          --project-ref $SUPABASE_PROJECT_ID \
          --experimental --confirm
          
        echo "‚úÖ Preview branch deleted"
        
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: 'üßπ Supabase preview branch has been cleaned up.'
          });