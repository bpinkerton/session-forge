name: Vercel Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test-before-preview:
    name: Run Tests Before Preview
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:run
      
    - name: Run linter
      run: npm run lint
      continue-on-error: true  # Don't block preview on lint warnings
      
    - name: Type check
      run: npx tsc --noEmit
      
  deploy-preview:
    name: Deploy Preview to Vercel
    runs-on: ubuntu-latest
    needs: test-before-preview
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set environment to staging
      id: branch-info
      run: |
        echo "ðŸŽ¯ Using staging environment for preview deployment"
        echo "branch_exists=false" >> $GITHUB_OUTPUT
      
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      env:
        VITE_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
      run: |
        echo "ðŸ”¨ Building with staging Supabase environment"
        vercel build --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Preview to Vercel
      id: deploy
      run: |
        echo "ðŸš€ Deploying preview to Vercel..."
        DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
        echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        echo "âœ… Preview deployed to: $DEPLOYMENT_URL"
        
    - name: Comment PR with Preview URL
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = '${{ steps.deploy.outputs.DEPLOYMENT_URL }}';
          const comment = `ðŸš€ **Preview Deployment Ready!**
          
          - Preview URL: ${deploymentUrl}
          - All tests passed âœ…
          
          This preview will be updated automatically as you push new commits.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });